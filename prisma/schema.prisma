datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id    String @id @default(cuid())
  email String @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  password Password?
  games    Game[]
}

model Password {
  hash String

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String @unique
}

model Player {
  id    String  @id @default(cuid())
  name  String  @unique
  games Table[]
  Round Round[]
}

model GameType {
  name  String  @id
  rate  Int
  Round Round[]
}

model Game {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  rounds    Round[]
  user      User?    @relation(fields: [userId], references: [id])
  userId    String?
  players   Table[]
  isActive  Boolean  @default(false)

  @@map("GameSession")
}

model Table {
  game     Game   @relation(fields: [gameId], references: [id])
  player   Player @relation(fields: [playerId], references: [id])
  position Int
  gameId   String
  playerId String

  @@id([gameId, playerId])
  @@unique([gameId, playerId, position])
}

model Round {
  number   Int
  gameId   String
  game     Game   @relation(fields: [gameId], references: [id])
  player   Player @relation(fields: [playerId], references: [id])
  playerId String

  gameType        GameType         @relation(fields: [gameTypeName], references: [name])
  gameTypeName    String
  ColorGameResult ColorGameResult?
  TrickGameResult TrickGameResult?

  playerScore     Int @default(0)
  oppositionScore Int @default(0)

  @@id([gameId, number])
  @@unique([gameId, number, playerId])
}

model ColorGameResult {
  gameId      String
  roundNumber Int
  round       Round  @relation(fields: [gameId, roundNumber], references: [gameId, number])

  flekCount    Int
  gameOfHearts Boolean

  seven    Seven?
  marriage Marriage[]

  points Int

  @@id([gameId, roundNumber])
  @@map("round.colorResult")
}

model Seven {
  gameId      String
  roundNumber Int
  // player | opposition
  role        String

  silent          Boolean
  won             Boolean
  ColorGameResult ColorGameResult @relation(fields: [gameId, roundNumber], references: [gameId, roundNumber])

  @@id([gameId, roundNumber])
  @@unique([gameId, roundNumber, role])
}

model Marriage {
  gameId      String
  roundNumber Int
  // player | opposition
  role        String

  spade           Boolean
  club            Boolean
  heart           Boolean
  diamond         Boolean
  ColorGameResult ColorGameResult @relation(fields: [gameId, roundNumber], references: [gameId, roundNumber])

  @@id([gameId, roundNumber])
  @@unique([gameId, roundNumber, role])
}

model TrickGameResult {
  gameId      String
  roundNumber Int
  round       Round  @relation(fields: [gameId, roundNumber], references: [gameId, number])

  open Boolean
  won  Boolean

  @@id([gameId, roundNumber])
  @@map("round.trickResult")
}
